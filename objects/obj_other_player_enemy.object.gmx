<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bayajin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action = 'Idle';
char_id = '';
image_speed = 0;
image_xscale = -1;

origin = room;

race = 'Bayajin';


//sprites
sprite_idle = spr_bayajin;
sprite_defeated = spr_bayajin_defeated;
sprite_fight = spr_bayajin_fight;
sprite_attack = spr_bayajin_train;
sprite_hurt = spr_bayajin_hurt;
sprite_defend = spr_bayajin_defend;


//variables
name = 'Nothing';

max_hp = 1;
attack = 1;
defense = 1;

hp = max_hp;
power_level = 100;







//starting sprite
image_index = 0;




target = noone;
buff = noone;
transformation = noone;


//breathing effect
amplitude = 0.05;
frequency = 0.05;
timer = 0;
stretch = 1;

alarm[1] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = max_hp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

with(obj_hero){
image_index = 0;
action = 'Idle';
hp = max_hp;
}

//score changes add and loses
var temp = gms_ini_game_read(string(char_id),"score");
if temp &gt;= score{
score += 18;
}

if temp &lt; score{
score += 6;
}

//refresh highscore
scr_highscore();

instance_destroy();





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//idle 
if action = 'Idle'{
image_index = 0;
}

//defeated
if hp &lt;= 0{
action = 'Defeated';
}

if action = 'Defeated'{
image_index = 7;

if alarm[0] = -1{
alarm[0] = 30*5;}

with(obj_damage){
instance_destroy();
}

}

//power level
power_level = (max_hp+attack+defense);

//battle room x and y

x = obj_hero.x+115;
y = obj_hero.y;




//breathing
stretch = 1 + sin(timer * frequency) * amplitude;
timer++;

if hp &lt; (max_hp/2) {
amplitude = 0.1;
frequency = 0.1;
} else{
amplitude = 0.05;
frequency = 0.05;
}

//variables load
//sprites
sprite_idle = gms_ini_game_read(string(char_id),"sprite_idle");
sprite_defeated = gms_ini_game_read(string(char_id),"sprite_defeated");
sprite_fight = gms_ini_game_read(string(char_id),"sprite_fight");
sprite_attack = gms_ini_game_read(string(char_id),"sprite_attack");
sprite_defend = gms_ini_game_read(string(char_id),"sprite_defend");
sprite_hurt = gms_ini_game_read(string(char_id),"sprite_hurt");


//variables
name = gms_ini_game_read(string(char_id),"name");

max_hp = real(gms_ini_game_read(string(char_id),'max_hp'));
attack = real(gms_ini_game_read(string(char_id),'attack'));
defense = real(gms_ini_game_read(string(char_id),'defense'));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//draw the sprite


draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, stretch, image_angle, image_blend, image_alpha);

if action != 'Defeated' &amp;&amp; obj_hero.action != 'Defeated'{
scr_scouter();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
