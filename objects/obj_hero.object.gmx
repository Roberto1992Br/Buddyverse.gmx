<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bayajin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_create_hero();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
instance_create(x,y,obj_autosave);
alarm[2] = 9000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//combat
if instance_exists(target){
obj_hero.sprite_index = sprite_fight;
target.sprite_index = target.sprite_fight;
}

alarm[1] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//returning from defeated
action = 'Idle';
hp = max_hp;

if race = 'Bayajin'{
points += 5;
}

alarm[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if action = 'Idle'{
sprite_index = sprite_idle;

//if room = rm_bayajin_planet{
//if !instance_exists(obj_train_button){
//instance_create(48,32,obj_train_button);
//}
//}

//if room = rm_bayajin_planet{
//if !instance_exists(obj_enemy_butoon){
//instance_create(128,32,obj_enemy_butoon);
//}
//}
}


//fighting
if instance_exists(target) &amp;&amp; action != 'Defeated'{
if target.action = 'Fighting'{
action = 'Fighting';}
}

if action = 'Fighting'{

if keyboard_check_pressed(vk_space) &amp;&amp; target.action = 'Fighting'{
if alarm[1] = -1{
scr_damage();} else {alarm[1] = 1;};
} 

}



//defeated in fight
if action = 'Defeated'{
sprite_index = sprite_defeated;

with(obj_damage) {instance_destroy()};

if instance_exists(target){
with(target){
action = 'Idle';
image_xscale = -1;
hp = max_hp;
}

if target.object_index = obj_other_player_enemy {
with(target){
instance_destroy();
}
}

}

if alarm[0] = -1{
alarm[0] = 30*30; }//defeated alarm
}



//training
if action = 'Training'{
if !instance_exists(obj_train_press_button){
instance_create(x,y-sprite_get_height(sprite_index),obj_train_press_button);
}

} else {
if instance_exists(obj_train_press_button){
with(obj_train_press_button){ instance_destroy(); };
}
}


//level up buttons
if points &gt; 0 &amp;&amp; room = rm_bayajin_planet{

var ii = 128;

if !instance_exists(obj_level_up_hp){
instance_create(64,ii,obj_level_up_hp);
ii += 64;
}

if !instance_exists(obj_level_up_attack){
instance_create(64,ii,obj_level_up_attack);
ii += 64;
}

if !instance_exists(obj_level_up_defense){
instance_create(64,ii,obj_level_up_defense);
ii += 64;
}


} else {

if instance_exists(obj_level_up_hp){
with(obj_level_up_hp) {instance_destroy();};}

if instance_exists(obj_level_up_attack){
with(obj_level_up_attack) {instance_destroy();};}

if instance_exists(obj_level_up_defense){
with(obj_level_up_defense) {instance_destroy();};}

}

//limits
//hp
if hp &gt; max_hp{
hp = max_hp;
}

//power level
power_level = (max_hp+attack+defense);

//training limits
if xp &gt;= next_level {
xp = 0;
level += 1;
points += 5;
effect_create_above(ef_ellipse,x,y-100,2,c_white);
}

if xp &lt; 0 {xp = 0;};

//death
if hp &lt;= 0{
action = 'Defeated';

if instance_exists(obj_other_player_enemy){
with (target){
var temp = gms_ini_game_read(string(char_id),"score");
if temp &gt;= score{
score -= 8;
}

if temp &lt; score{
score -= 18;
}
}
//refresh highscore
scr_highscore();
}

hp = 1;
}
//breathing
stretch = 1 + sin(timer * frequency) * amplitude;
timer++;

if hp &lt; (max_hp/2) {
amplitude = 0.1;
frequency = 0.1;
} else{
amplitude = 0.05;
frequency = 0.05;
}

//targeting
if instance_exists(obj_enemy){
target = obj_enemy;
}

if instance_exists(obj_other_player_enemy){
target = obj_other_player_enemy;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if action = 'Defeated'{
draw_set_colour(c_black);
draw_rectangle(0,0,room_width,room_height,false);

draw_set_colour(c_red);
draw_set_font(fnt_big);
draw_text(x,y+sprite_get_height(sprite_index)+64,string(alarm[0]/60));

}

//draw the sprite
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, stretch, image_angle, image_blend, image_alpha);

if action != 'Defeated'{
scr_scouter();
}

if action = 'Training'{
var pc;
pc = (xp / next_level) * 100;
draw_healthbar(x-64, y+16, x+64, y+48, pc, c_black, c_lime, c_lime, 0, true, true)
}

if action = 'Fighting'{
if instance_exists(target){
if target.action = 'Fighting'{
draw_sprite(spr_spacebar,0,480,176);
}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
